import streamlit as st
import pandas as pd
from backend.gsheet_service import get_gsheet_client, get_worksheet_by_name

def render_companies_tab():
    st.subheader("üè¢ –ö–æ–º–ø–∞–Ω—ñ—ó")

    try:
        gc = get_gsheet_client()
        spreadsheet = gc.open_by_key(st.secrets["spreadsheet_id"])
        sheet = get_worksheet_by_name(spreadsheet, "—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏")
        records = sheet.get_all_records()
        df = pd.DataFrame(records)

        if df.empty:
            st.info("‚ÑπÔ∏è –£ —Ç–∞–±–ª–∏—Ü—ñ '—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏' –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö.")
            return

        # –£–±–∏—Ä–∞—î–º–æ –¥—É–±–ª—ñ –∑–∞ —Å–∞–π—Ç–æ–º
        df = df.drop_duplicates(subset=["–°–∞–π—Ç"])

        # –§—ñ–ª—å—Ç—Ä —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ "–¢–∞–∫"
        show_only_yes = st.checkbox("–ü–æ–∫–∞–∑–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–∏—Ö (–ö–ª—ñ—î–Ω—Ç: –¢–∞–∫)", value=True)
        if show_only_yes:
            df = df[df["GPT: –ö–ª—ñ—î–Ω—Ç"].astype(str).str.startswith("–¢–∞–∫")]

        # –í–∏–≤–æ–¥–∏–º–æ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏
        selected_columns = ["–ù–∞–∑–≤–∞", "–°–∞–π—Ç", "Email", "–ö—Ä–∞—ó–Ω–∞", "GPT: –ö–ª—ñ—î–Ω—Ç"]
        selected_columns = [col for col in selected_columns if col in df.columns]
        df = df[selected_columns]

        st.dataframe(df.reset_index(drop=True), use_container_width=True)

    except Exception as e:
        st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≤–∫–ª–∞–¥–∫–∏ '—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏': {e}")
