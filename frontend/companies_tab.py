import streamlit as st
import pandas as pd
from backend.gsheet_service import get_gsheet_client, get_worksheet_by_name

def render_companies_tab():
    try:
        gc = get_gsheet_client()
        sheet = gc.open_by_key(st.secrets["spreadsheet_id"])
        ws = get_worksheet_by_name(sheet, "—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏")
        data = ws.get_all_records()
        df = pd.DataFrame(data)

        # –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∫–æ–º–ø–∞–Ω—ñ—ó, –¥–µ GPT: –ö–ª—ñ—î–Ω—Ç –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ "—Ç–∞–∫"
        df = df[df["GPT: –ö–ª—ñ—î–Ω—Ç"].str.strip().str.lower().str.startswith("—Ç–∞–∫")]

        # –í—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏ (–±–µ–∑ "–°—Ç–æ—Ä—ñ–Ω–∫–∞")
        required_columns = ["–ö–æ–º–ø–∞–Ω—ñ—è", "–°–∞–π—Ç", "Email", "–ö—Ä–∞—ó–Ω–∞", "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è", "–í–∏—Å–Ω–æ–≤–æ–∫ GPT"]

        # –î–æ–¥–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏, —è–∫—â–æ —ó—Ö –Ω–µ –≤–∏—Å—Ç–∞—á–∞—î
        for col in required_columns:
            if col not in df.columns:
                df[col] = ""

        # –ü–µ—Ä–µ—É–ø–æ—Ä—è–¥–∫–æ–≤—É—î–º–æ –∫–æ–ª–æ–Ω–∫–∏
        df = df[required_columns]

        # –í–∏–¥–∞–ª—è—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ –∑–∞ —Å–∞–π—Ç–æ–º (—ñ–≥–Ω–æ—Ä—É—î–º–æ —Ä–µ–≥—ñ—Å—Ç—Ä —ñ –ø—Ä–æ–±—ñ–ª–∏)
        df["–°–∞–π—Ç_normalized"] = df["–°–∞–π—Ç"].str.strip().str.lower()
        df = df.drop_duplicates(subset="–°–∞–π—Ç_normalized", keep="first")
        df = df.drop(columns=["–°–∞–π—Ç_normalized"])

        st.markdown("### üè¢ –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ñ –∫–æ–º–ø–∞–Ω—ñ—ó (GPT: –ö–ª—ñ—î–Ω—Ç = –¢–∞–∫)")

        if df.empty:
            st.info("üì≠ –ù–µ–º–∞—î –∫–æ–º–ø–∞–Ω—ñ–π, –ø–æ–∑–Ω–∞—á–µ–Ω–∏—Ö GPT —è–∫ '–ö–ª—ñ—î–Ω—Ç: –¢–∞–∫'. –ê–ª–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–∞.")
        else:
            st.dataframe(df.reset_index(drop=True), use_container_width=True)

    except Exception as e:
        st.error(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –∑ –≤–∫–ª–∞–¥–∫–∏ '—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏': {e}")
