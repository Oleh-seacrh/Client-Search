import streamlit as st
from backend.company_loader import load_companies_from_tab
from backend.site_finder import find_sites_for_companies
from backend.gpt_analyzer import analyze_sites_from_results

def render_search_tab():
    st.header("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–∑–≤ –∫–æ–º–ø–∞–Ω—ñ–π –∑ —ñ–Ω—à–æ—ó –≤–∫–ª–∞–¥–∫–∏")

    source_tab = st.text_input("–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –≤–∫–ª–∞–¥–∫–∏ –∑ –∫–æ–º–ø–∞–Ω—ñ—è–º–∏:")
    if st.button("–ó—á–∏—Ç–∞—Ç–∏ –∫–æ–º–ø–∞–Ω—ñ—ó —Ç–∞ –¥–æ–ø–æ–≤–Ω–∏—Ç–∏ –≤–∫–ª–∞–¥–∫—É '–∫–æ–º–ø–∞–Ω—ñ—ó'"):
        if source_tab:
            try:
                logs, count = load_companies_from_tab(source_tab, st.secrets["spreadsheet_id"])
                st.success(f"‚úÖ –î–æ–¥–∞–Ω–æ –Ω–æ–≤–∏—Ö –∫–æ–º–ø–∞–Ω—ñ–π: {count}")
                st.markdown("### üìã –ñ—É—Ä–Ω–∞–ª –æ–±—Ä–æ–±–∫–∏:")
                for msg in logs:
                    st.markdown(msg)
            except Exception as e:
                st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

    st.header("üåê –ü–æ—à—É–∫ —Å–∞–π—Ç—ñ–≤ –∑–∞ –Ω–∞–∑–≤–∞–º–∏ –∫–æ–º–ø–∞–Ω—ñ–π")

    max_to_check = st.selectbox("–°–∫—ñ–ª—å–∫–∏ –∫–æ–º–ø–∞–Ω—ñ–π –æ–±—Ä–æ–±–∏—Ç–∏ –∑–∞ —Ä–∞–∑:", options=list(range(1, 21)), index=0)
    if st.button("üîç –ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫ —Å–∞–π—Ç—ñ–≤"):
        try:
            logs = find_sites_for_companies(max_to_check, st.secrets["spreadsheet_id"])
            st.success("üèÅ –ü–æ—à—É–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
            for msg in logs:
                st.markdown(msg)
        except Exception as e:
            st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø–æ—à—É–∫—É —Å–∞–π—Ç—ñ–≤: {e}")

    st.header("üß† GPT-–ê–Ω–∞–ª—ñ–∑ —Å–∞–π—Ç—ñ–≤ –∑ –≤–∫–ª–∞–¥–∫–∏ '—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏'")

    if st.button("üîç –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–Ω–∞–ª—ñ–∑ (–¥–æ 20 –Ω–æ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤)"):
        try:
            logs = analyze_sites_from_results(st.secrets["spreadsheet_id"], limit=20)
            st.success("‚úÖ GPT –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞–≤ —Å–∞–π—Ç–∏.")
            for msg in logs:
                st.markdown(msg)
        except Exception as e:
            st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ GPT-–∞–Ω–∞–ª—ñ–∑—É: {e}")
