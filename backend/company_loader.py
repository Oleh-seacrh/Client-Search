from backend.gsheet_service import get_gsheet_client
import re
import streamlit as st

def load_companies_from_tab(source_tab: str, spreadsheet_id: str):
    gc = get_gsheet_client()
    sh = gc.open_by_key(spreadsheet_id)

    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ –¥–∂–µ—Ä–µ–ª–∞
    ws = sh.worksheet(source_tab)
    data = ws.col_values(1)[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫

    # –ì–æ—Ç—É—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –≤–∫–ª–∞–¥–∫—É "–∫–æ–º–ø–∞–Ω—ñ—ó"
    try:
        company_sheet = sh.worksheet("–∫–æ–º–ø–∞–Ω—ñ—ó")
        existing = set(name.strip().upper() for name in company_sheet.col_values(1)[1:])
    except:
        company_sheet = sh.add_worksheet(title="–∫–æ–º–ø–∞–Ω—ñ—ó", rows="1000", cols="1")
        company_sheet.update("A1", [["–ö–æ–º–ø–∞–Ω—ñ—ó"]])
        existing = set()

    log_output = []
    new_entries = []

    for name in data:
        if not name:
            continue
        original = name
        name = name.strip().lower()

        # –í–∏–¥–∞–ª—è—î–º–æ –ø—Ä–µ—Ñ—ñ–∫—Å–∏
        for prefix in ["—Ñ–æ–ø", "—Ç–æ–≤", "–ø–ø"]:
            if name.startswith(prefix):
                name = name[len(prefix):].strip()

        # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –ª–∞–ø–∫–∏ —Ç–∞ –∑–∞–π–≤—ñ –ø—Ä–æ–±—ñ–ª–∏
        name = name.replace("¬´", "").replace("¬ª", "").replace("\"", "")
        name = ' '.join(name.split())

        if len(name) > 2:
            cleaned = name.upper()
            if cleaned in existing or cleaned in [x[0] for x in new_entries]:
                log_output.append(f"üîÅ –ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä: {original}")
            else:
                new_entries.append([cleaned])
                log_output.append(f"‚ûï –î–æ–¥–∞–Ω–æ: {cleaned}")

    # –î–æ–¥–∞—î–º–æ —É —Ç–∞–±–ª–∏—Ü—é
    if new_entries:
        next_row = len(existing) + 2  # 1-based, –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
        company_sheet.update(f"A{next_row}:A{next_row + len(new_entries) - 1}", new_entries)

    return log_output, len(new_entries)
