import openai
import re
import time
from urllib.parse import urlparse

# –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π –∫–ª—é—á –∞–±–æ —ñ–º–ø–æ—Ä—Ç—É–π –∑ secrets
OPENAI_API_KEY = st.secrets["OPENAI_API_KEY"]  # üîê

def call_gpt(prompt: str, model: str = "gpt-4o", max_tokens: int = 300, retries: int = 3, delay: float = 2.0) -> str:
    """
    –í–∏–∫–ª–∏–∫–∞—î OpenAI GPT –∑ –∑–∞–¥–∞–Ω–∏–º –ø—Ä–æ–º–ø—Ç–æ–º.
    –ü–æ–≤–µ—Ä—Ç–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É –≤–∏–≥–ª—è–¥—ñ —Ç–µ–∫—Å—Ç—É.
    """
    for attempt in range(retries):
        try:
            response = openai.ChatCompletion.create(
                model=model,
                messages=[
                    {"role": "system", "content": "–¢–∏ GPT, —è–∫–∏–π –∞–Ω–∞–ª—ñ–∑—É—î –±—ñ–∑–Ω–µ—Å-—Å–∞–π—Ç–∏. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ —ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ."},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=max_tokens,
                temperature=0.3,
            )
            return response['choices'][0]['message']['content'].strip()
        except Exception as e:
            print(f"[GPT Error] –°–ø—Ä–æ–±–∞ {attempt+1}/{retries}: {e}")
            time.sleep(delay)
    return "GPT Error"

def simplify_url(link: str) -> str:
    """
    –°–ø—Ä–æ—â—É—î URL –¥–æ —Ñ–æ—Ä–º–∞—Ç—É https://site.com
    """
    try:
        parsed = urlparse(link)
        return f"{parsed.scheme}://{parsed.netloc}"
    except Exception:
        return link  # fallback

def extract_email(text: str) -> str:
    """
    –í–∏—Ç—è–≥—É—î –ø–µ—Ä—à—É email-–∞–¥—Ä–µ—Å—É –∑ —Ç–µ–∫—Å—Ç—É (–∞–±–æ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ä–æ–∂–Ω—å–æ)
    """
    match = re.search(r"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}", text)
    return match.group(0) if match else ""
